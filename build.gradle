buildscript {
    ext {
        kotlinVersion = '1.1.1'
        vertxVersion = '3.4.1'
        logbackVersion = '1.1.7'
        commonsLangVersion = '3.4'
        daggerVersion = '2.10'
        morphiaVersion = '1.3.2'
        commonsCodecVersion = '1.10'
        jacksonVersion = '2.9.0.pr2'
        hibernateValidatorVersion = '5.3.3.Final'
        pebbleVersion = '2.3.0'
        jBCryptVersion = '0.4.1'
        jUnitVersion = '4.12'
        logstashLogbackEncoderVersion = '4.7'
        papertrailLogbackVersion = '1.0.0'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'kotlin-kapt'

group 'org.jasoet.kotlin'

mainClassName = 'org.jasoet.kotlin.Application'

repositories {
    jcenter()
}

dependencies {
    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-rx-java:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-web-templ-pebble:$vertxVersion"
    compile "io.vertx:vertx-config:$vertxVersion"
    compile "io.vertx:vertx-lang-kotlin:$vertxVersion"
    compile "io.vertx:vertx-hazelcast:$vertxVersion"
    compile "io.vertx:vertx-auth-common:$vertxVersion"
    compile "com.mitchellbosecke:pebble:${pebbleVersion}"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    compile "org.apache.commons:commons-lang3:${commonsLangVersion}"
    compile "commons-codec:commons-codec:${commonsCodecVersion}"

    compile "org.mongodb.morphia:morphia:${morphiaVersion}"
    compile "org.mongodb.morphia:morphia-validation:${morphiaVersion}"
    compile "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"

    compile "ch.qos.logback:logback-classic:$logbackVersion"

    compile "org.jetbrains.kotlin:kotlin-runtime:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"


    compile("net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}")
    compile("com.papertrailapp:logback-syslog4j:${papertrailLogbackVersion}")

    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile "junit:junit:$jUnitVersion"

}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.1"
        languageVersion = "1.1"
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.1"
        languageVersion = "1.1"
    }
}

idea {
    module {
        testSourceDirs += file('build/generated/source/kapt/test')
        sourceDirs += file('build/generated/source/kapt/main')
    }
}

shadowJar {
    baseName = 'kotlin'
    classifier = 'api'
}

task docker(type: Zip, dependsOn: 'shadowJar') {
    doLast {
        copy {
            from "${projectDir}/deployment/"
            into "${buildDir}/dist"
            include 'docker-compose.yml'
        }
    }
    from("${projectDir}/deployment/") {
        exclude("docker-compose.yml")
        include("*/*", "*")
    }
    from("${buildDir}/libs/") {
        into "api"
        include '*.jar'
    }
    archiveName "docker-lawble-kotlin.zip"
    destinationDir new File("$buildDir", 'dist')
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
